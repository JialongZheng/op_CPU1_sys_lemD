/*
 * ExRAM.h
 *
 *  Created on: 2024年3月6日
 *      Author: Admin
 */
#include"RecordCtrl.h"
#ifndef APP_INCLUDE_EXRAM_H_
#define APP_INCLUDE_EXRAM_H_

//#define ASRAM_CS3_START_ADDR 0x300000//DSP DataSheet
//#define ASRAM_CS3_SIZE 0x40000
//#define ASRAM_CS3_SIZE2 0x80000
//
#define RAM_FaultGroupNum 2//2组故障缓存
#define RAM_PeakGroupNum 2//2组峰值缓存
#define RAM_RmsGroupNum 2//2组有效值缓存
////Group1 address
//#define CACHE_RAM_FAULT1_START (0x300000)//故障缓存地址0-40000
//#define CACHE_RAM_PEAK1_START (0x309C40)//峰值缓存地址40000-200000
//#define CACHE_RAM_RMS1_START (0x330D40)//有效值缓存地址200000-205000
//#define CACHE_RAM_STATUS1_START (0x3320C8)//状态缓存地址205000-250000
////Group2 address
//#define CACHE_RAM_FAULT2_START (0x33D090)//250000-290000
//#define CACHE_RAM_PEAK2_START (0x346CD0)//290000-450000
//#define CACHE_RAM_RMS2_START (0x36DDD0)//450000-455000
//#define CACHE_RAM_STATUS2_START (0x300000+0x6F158)//455000-500000
////每种故障数据地址
////#define FAULT1_TYPE13_START (CACHE_RAM_FAULT1_START+13*SAMP_NUM_FLT)ULL
//#define FAULT1_TYPE0_START (0x300000)//0x300000+0*1000
//#define FAULT1_TYPE1_START CACHE_RAM_FAULT1_START+1*SAMP_NUM_FLT//(0x3003E8)
//#define FAULT1_TYPE2_START CACHE_RAM_FAULT1_START+2*SAMP_NUM_FLT//(0x3007D0)
//#define FAULT1_TYPE3_START CACHE_RAM_FAULT1_START+3*SAMP_NUM_FLT//(0x300BB8)
//#define FAULT1_TYPE4_START CACHE_RAM_FAULT1_START+4*SAMP_NUM_FLT//(0x300FA0)
//#define FAULT1_TYPE5_START CACHE_RAM_FAULT1_START+5*SAMP_NUM_FLT//(0x301388)
//#define FAULT1_TYPE6_START CACHE_RAM_FAULT1_START+6*SAMP_NUM_FLT//(0x301770)
//#define FAULT1_TYPE7_START CACHE_RAM_FAULT1_START+7*SAMP_NUM_FLT//(0x301B58)
//#define FAULT1_TYPE8_START CACHE_RAM_FAULT1_START+8*SAMP_NUM_FLT//(0x301F40)
//#define FAULT1_TYPE9_START CACHE_RAM_FAULT1_START+9*SAMP_NUM_FLT//(0x302328)
//#define FAULT1_TYPE10_START CACHE_RAM_FAULT1_START+10*SAMP_NUM_FLT//(0x302710)
//#define FAULT1_TYPE11_START CACHE_RAM_FAULT1_START+11*SAMP_NUM_FLT//(0x302AF8)
//#define FAULT1_TYPE12_START CACHE_RAM_FAULT1_START+12*SAMP_NUM_FLT//(0x302EE0)
//#define FAULT1_TYPE13_START CACHE_RAM_FAULT1_START+13*SAMP_NUM_FLT//(0x3032C8)
//
//#define FAULT2_TYPE0_START (0x33D090)//0x33D090+0*1000
//#define FAULT2_TYPE1_START CACHE_RAM_FAULT1_START+1*SAMP_NUM_FLT
//#define FAULT2_TYPE2_START CACHE_RAM_FAULT1_START+2*SAMP_NUM_FLT//()
//#define FAULT2_TYPE3_START CACHE_RAM_FAULT1_START+3*SAMP_NUM_FLT//()
//#define FAULT2_TYPE4_START CACHE_RAM_FAULT1_START+4*SAMP_NUM_FLT//()
//#define FAULT2_TYPE5_START CACHE_RAM_FAULT1_START+5*SAMP_NUM_FLT//()
//#define FAULT2_TYPE6_START CACHE_RAM_FAULT1_START+6*SAMP_NUM_FLT//()
//#define FAULT2_TYPE7_START CACHE_RAM_FAULT1_START+7*SAMP_NUM_FLT//()
//#define FAULT2_TYPE8_START CACHE_RAM_FAULT1_START+8*SAMP_NUM_FLT//()
//#define FAULT2_TYPE9_START CACHE_RAM_FAULT1_START+9*SAMP_NUM_FLT//()
//#define FAULT2_TYPE10_START CACHE_RAM_FAULT1_START+10*SAMP_NUM_FLT//()
//#define FAULT2_TYPE11_START CACHE_RAM_FAULT1_START+11*SAMP_NUM_FLT//()
//#define FAULT2_TYPE12_START CACHE_RAM_FAULT1_START+12*SAMP_NUM_FLT//()
//#define FAULT2_TYPE13_START CACHE_RAM_FAULT1_START+13*SAMP_NUM_FLT//()
////每种峰值数据地址
////#define PEAK1_TYPE1_START CACHE_RAM_PEAK1_START+1*SAMP_NUM
//#define PEAK1_TYPE0_START (0x309C40)
//#define PEAK1_TYPE1_START (0x30B98C)
//#define PEAK1_TYPE2_START (0x30D6D8)
//#define PEAK1_TYPE3_START (0x30F424)
//#define PEAK1_TYPE4_START (0x311170)
//#define PEAK1_TYPE5_START (0x312EBC)
//#define PEAK1_TYPE6_START (0x314C08)
//#define PEAK1_TYPE7_START (0x316954)
//#define PEAK1_TYPE8_START (0x3186A0)
//#define PEAK1_TYPE9_START (0x31A3EC)
//#define PEAK1_TYPE10_START (0x31C138)
//#define PEAK1_TYPE11_START (0x31DE84)
//#define PEAK1_TYPE12_START (0x31FBD0)
//#define PEAK1_TYPE13_START (0x32191C)
//
//#define PEAK2_TYPE0_START (0x346CD0)
//#define PEAK2_TYPE1_START (0x348A1C)
//#define PEAK2_TYPE2_START (0x34A768)
//#define PEAK2_TYPE3_START (0x34C4B4)
//#define PEAK2_TYPE4_START (0x34E200)
//#define PEAK2_TYPE5_START (0x34FF4C)
//#define PEAK2_TYPE6_START (0x351C98)
//#define PEAK2_TYPE7_START (0x3539E4)
//#define PEAK2_TYPE8_START (0x355730)
//#define PEAK2_TYPE9_START (0x35747C)
//#define PEAK2_TYPE10_START (0x3591C8)
//#define PEAK2_TYPE11_START (0x35AF14)
//#define PEAK2_TYPE12_START (0x35CC60)
//#define PEAK2_TYPE13_START (0x35E9AC)
////每种有效值数据地址
//#define RMS1_TYPE0_START (0x330D40)
//#define RMS1_TYPE1_START (CACHE_RAM_RMS1_START+1*NF_DataNum_Rms)
//#define RMS1_TYPE2_START (CACHE_RAM_RMS1_START+2*NF_DataNum_Rms)
//#define RMS1_TYPE3_START (CACHE_RAM_RMS1_START+3*NF_DataNum_Rms)
//#define RMS1_TYPE4_START (CACHE_RAM_RMS1_START+4*NF_DataNum_Rms)
//#define RMS1_TYPE5_START (CACHE_RAM_RMS1_START+5*NF_DataNum_Rms)
//
//#define RMS2_TYPE0_START (0x330D40)
//#define RMS2_TYPE1_START (CACHE_RAM_RMS2_START+1*NF_DataNum_Rms)
//#define RMS2_TYPE2_START (CACHE_RAM_RMS2_START+2*NF_DataNum_Rms)
//#define RMS2_TYPE3_START (CACHE_RAM_RMS2_START+3*NF_DataNum_Rms)
//#define RMS2_TYPE4_START (CACHE_RAM_RMS2_START+4*NF_DataNum_Rms)
//#define RMS2_TYPE5_START (CACHE_RAM_RMS2_START+5*NF_DataNum_Rms)
////每种状态数据地址
//#define STATUS1_TYPE0_START (0x3320C8)//状态缓存地址205000-250000
////#define STATUS1_TYPE0_START (CACHE_RAM_STATUS1_START+)
//
//Uint16 WriteMem(uint32_t startAddr,Uint16 WriteData,Uint16 memSize);
//Uint16 ReadMem(uint32_t startAddr,Uint16 memSize);
//void WriteMem1word(uint32_t startAddr,Uint16 WriteData);
//Uint16 ReadMem1word(uint32_t startAddr);
#endif /* APP_INCLUDE_EXRAM_H_ */
